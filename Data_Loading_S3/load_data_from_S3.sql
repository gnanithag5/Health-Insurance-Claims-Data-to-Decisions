USE ROLE ACCOUNTADMIN;

CREATE OR REPLACE WAREHOUSE CLAIMS_WH
  WAREHOUSE_SIZE = XSMALL
  MIN_CLUSTER_COUNT = 1
  MAX_CLUSTER_COUNT = 2
  AUTO_SUSPEND = 60
  AUTO_RESUME = TRUE
  INITIALLY_SUSPENDED = TRUE;

USE WAREHOUSE COMPUTE_WH;

-- clean database/schemas
CREATE OR REPLACE DATABASE HC_CLAIMS;
CREATE OR REPLACE SCHEMA HC_CLAIMS.RAW_DATA;
CREATE OR REPLACE SCHEMA HC_CLAIMS.MARTS_FINANCE;
CREATE OR REPLACE SCHEMA HC_CLAIMS.MARTS_FRAUD_ANALYSIS;
CREATE OR REPLACE SCHEMA HC_CLAIMS.SNAPSHOTS;

-- CSV file format
CREATE OR REPLACE FILE FORMAT HC_CLAIMS.RAW_DATA.FF_CSV
  TYPE = CSV
  FIELD_DELIMITER = ','
  PARSE_HEADER = TRUE
  FIELD_OPTIONALLY_ENCLOSED_BY = '"'
  EMPTY_FIELD_AS_NULL = TRUE
  NULL_IF = ('', 'NULL');

-- External S3 stage
CREATE OR REPLACE STAGE HC_CLAIMS.RAW_DATA.S3_STAGE
  URL = 's3://{AWS_BUCKET}/{AWS_PREFIX}/'
  CREDENTIALS = (
    AWS_KEY_ID = '{AWS_ACCESS_KEY_ID}'
    AWS_SECRET_KEY = '{AWS_SECRET_ACCESS_KEY}'
  )
  FILE_FORMAT = HC_CLAIMS.RAW_DATA.FF_CSV;

-- check files
LIST @HC_CLAIMS.RAW_DATA.S3_STAGE/Provider.csv;
LIST @HC_CLAIMS.RAW_DATA.S3_STAGE/Beneficiarydata.csv;
LIST @HC_CLAIMS.RAW_DATA.S3_STAGE/Inpatientdata.csv;
LIST @HC_CLAIMS.RAW_DATA.S3_STAGE/Outpatientdata.csv;

-- Raw tables 
CREATE OR REPLACE TABLE HC_CLAIMS.RAW_DATA.PROVIDER_RAW (
  PROVIDER STRING,
  POTENTIALFRAUD STRING
);

CREATE OR REPLACE TABLE HC_CLAIMS.RAW_DATA.BENEFICIARY_RAW (
  BENEID STRING,
  DOB STRING,
  DOD STRING,
  GENDER INTEGER,
  RACE INTEGER,
  RenalDiseaseIndicator INTEGER,
  STATE INTEGER,
  COUNTY INTEGER,
  NoOfMonths_PartACov INTEGER,
  NoOfMonths_PartBCoV INTEGER,
  ChronicCond_Alzheimer INTEGER,
  ChronicCond_Heartfailure INTEGER,
  ChronicCond_KidneyDisease INTEGER,
  ChronicCond_Cancer INTEGER,
  ChronicCond_ObstrPulmonary INTEGER,
  ChronicCond_Depression INTEGER,
  ChronicCond_Diabetes INTEGER,
  ChronicCond_IschemicHeart INTEGER,
  ChronicCond_Osteoporasis INTEGER,
  ChronicCond_rheumatoidarthritis INTEGER,
  ChronicCond_stroke INTEGER,
  IPAnnualReimbursementAmt INTEGER,
  IPAnnualDeductibleAmt INTEGER,
  OPAnnualReimbursementAmt INTEGER,
  OPAnnualDeductibleAmt INTEGER
);

-- Inpatient
CREATE OR REPLACE TABLE HC_CLAIMS.RAW_DATA.INPATIENT_RAW (
  BENEID                     STRING,
  CLAIMID                    STRING,
  CLAIMSTARTDT               STRING,
  CLAIMENDDT                 STRING,
  PROVIDER                   STRING,
  INSCLAIMAMTREIMBURSED      STRING,
  ATTENDINGPHYSICIAN         STRING,
  OPERATINGPHYSICIAN         STRING,
  OTHERPHYSICIAN             STRING,
  ADMISSIONDT                STRING,
  CLMADMITDIAGNOSISCODE      STRING,
  DEDUCTIBLEAMTPAID          STRING,
  DISCHARGEDT                STRING,
  DIAGNOSISGROUPCODE         STRING,
  CLMDIAGNOSISCODE_1         STRING,
  CLMDIAGNOSISCODE_2         STRING,
  CLMDIAGNOSISCODE_3         STRING,
  CLMDIAGNOSISCODE_4         STRING,
  CLMDIAGNOSISCODE_5         STRING,
  CLMDIAGNOSISCODE_6         STRING,
  CLMDIAGNOSISCODE_7         STRING,
  CLMDIAGNOSISCODE_8         STRING,
  CLMDIAGNOSISCODE_9         STRING,
  CLMDIAGNOSISCODE_10        STRING,
  CLMPROCEDURECODE_1         STRING,
  CLMPROCEDURECODE_2         STRING,
  CLMPROCEDURECODE_3         STRING,
  CLMPROCEDURECODE_4         STRING,
  CLMPROCEDURECODE_5         STRING,
  CLMPROCEDURECODE_6         STRING
);

-- Outpatient
CREATE OR REPLACE TABLE HC_CLAIMS.RAW_DATA.OUTPATIENT_RAW (
  BENEID                     STRING,
  CLAIMID                    STRING,
  CLAIMSTARTDT               STRING,
  CLAIMENDDT                 STRING,
  PROVIDER                   STRING,
  INSCLAIMAMTREIMBURSED      STRING,
  ATTENDINGPHYSICIAN         STRING,
  OPERATINGPHYSICIAN         STRING,
  OTHERPHYSICIAN             STRING,
  CLMDIAGNOSISCODE_1         STRING,
  CLMDIAGNOSISCODE_2         STRING,
  CLMDIAGNOSISCODE_3         STRING,
  CLMDIAGNOSISCODE_4         STRING,
  CLMDIAGNOSISCODE_5         STRING,
  CLMDIAGNOSISCODE_6         STRING,
  CLMDIAGNOSISCODE_7         STRING,
  CLMDIAGNOSISCODE_8         STRING,
  CLMDIAGNOSISCODE_9         STRING,
  CLMDIAGNOSISCODE_10        STRING,
  CLMPROCEDURECODE_1         STRING,
  CLMPROCEDURECODE_2         STRING,
  CLMPROCEDURECODE_3         STRING,
  CLMPROCEDURECODE_4         STRING,
  CLMPROCEDURECODE_5         STRING,
  CLMPROCEDURECODE_6         STRING,
  DEDUCTIBLEAMTPAID          STRING,
  CLMADMITDIAGNOSISCODE      STRING
);

-- Load fresh each run 
COPY INTO HC_CLAIMS.RAW_DATA.PROVIDER_RAW
  FROM @HC_CLAIMS.RAW_DATA.S3_STAGE/Provider.csv
  FILE_FORMAT = (FORMAT_NAME = HC_CLAIMS.RAW_DATA.FF_CSV)
  MATCH_BY_COLUMN_NAME = CASE_INSENSITIVE
  ON_ERROR = 'CONTINUE';

COPY INTO HC_CLAIMS.RAW_DATA.BENEFICIARY_RAW
  FROM @HC_CLAIMS.RAW_DATA.S3_STAGE/Beneficiarydata.csv
  FILE_FORMAT = (FORMAT_NAME = HC_CLAIMS.RAW_DATA.FF_CSV)
  MATCH_BY_COLUMN_NAME = CASE_INSENSITIVE
  ON_ERROR = 'CONTINUE';

COPY INTO HC_CLAIMS.RAW_DATA.INPATIENT_RAW
  FROM @HC_CLAIMS.RAW_DATA.S3_STAGE/Inpatientdata.csv
  FILE_FORMAT = (FORMAT_NAME = HC_CLAIMS.RAW_DATA.FF_CSV)
  MATCH_BY_COLUMN_NAME = CASE_INSENSITIVE
  ON_ERROR = 'CONTINUE';

COPY INTO HC_CLAIMS.RAW_DATA.OUTPATIENT_RAW
  FROM @HC_CLAIMS.RAW_DATA.S3_STAGE/Outpatientdata.csv
  FILE_FORMAT = (FORMAT_NAME = HC_CLAIMS.RAW_DATA.FF_CSV)
  MATCH_BY_COLUMN_NAME = CASE_INSENSITIVE
  ON_ERROR = 'CONTINUE';

-- quick counts for logs
SELECT 'provider' AS tbl, COUNT(*) AS row_count FROM HC_CLAIMS.RAW_DATA.PROVIDER_RAW
UNION ALL SELECT 'beneficiary', COUNT(*) FROM HC_CLAIMS.RAW_DATA.BENEFICIARY_RAW
UNION ALL SELECT 'inpatient',   COUNT(*) FROM HC_CLAIMS.RAW_DATA.INPATIENT_RAW
UNION ALL SELECT 'outpatient',  COUNT(*) FROM HC_CLAIMS.RAW_DATA.OUTPATIENT_RAW;
